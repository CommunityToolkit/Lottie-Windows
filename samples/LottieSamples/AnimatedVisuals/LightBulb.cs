//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Microsoft.Graphics.Canvas.Geometry;
using Microsoft.UI.Xaml.Controls;
using System;
using System.Numerics;
using Windows.UI;
using Windows.UI.Composition;

namespace AnimatedVisuals
{
    sealed class LightBulb : IAnimatedVisualSource
    {
        public IAnimatedVisual TryCreateAnimatedVisual(Compositor compositor, out object diagnostics)
        {
            diagnostics = null;
            if (!IsRuntimeCompatible())
            {
                return null;
            }
            return new AnimatedVisual(compositor);
        }

        static bool IsRuntimeCompatible()
        {
            if (!Windows.Foundation.Metadata.ApiInformation.IsTypePresent("Windows.UI.Composition.CompositionGeometricClip"))
            {
                return false;
            }
            return true;
        }

        sealed class AnimatedVisual : IAnimatedVisual
        {
            const long c_durationTicks = 17000000;
            readonly Compositor _c;
            readonly ExpressionAnimation _reusableExpressionAnimation;
            CompositionColorBrush _colorBrush_Black;
            CompositionPath _compositionPath_3;
            CompositionPath _compositionPath_4;
            CompositionPath _compositionPath_5;
            CompositionPath _compositionPath_6;
            CubicBezierEasingFunction _cubicBezierEasingFunction_2;
            CubicBezierEasingFunction _cubicBezierEasingFunction_3;
            CubicBezierEasingFunction _cubicBezierEasingFunction_4;
            CubicBezierEasingFunction _cubicBezierEasingFunction_5;
            StepEasingFunction _holdThenStepEasingFunction;
            LinearEasingFunction _linearEasingFunction;
            ContainerVisual _root;
            ScalarKeyFrameAnimation _scalarAnimation_0_to_0;
            ScalarKeyFrameAnimation _scalarAnimation_1_to_0;
            ExpressionAnimation _scalarExpressionAnimation;
            StepEasingFunction _stepThenHoldEasingFunction;
            Vector2KeyFrameAnimation _vector2Animation;

            // Layer (Shape): default fill 2
            //   Path 1
            CompositionColorBrush AnimatedColorBrush_White_to_AlmostKhaki_FFFFEC64()
            {
                var result = _c.CreateColorBrush(Color.FromArgb(0xFF, 0xFF, 0xFF, 0xFF));
                result.StartAnimation("Color", ColorAnimation_White_to_AlmostKhaki_FFFFEC64());
                var controller = result.TryGetAnimationController("Color");
                controller.Pause();
                controller.StartAnimation("Progress", _scalarExpressionAnimation);
                return result;
            }

            // Layer (Shape): default fill 3
            //   Path 1
            CompositionColorBrush AnimatedColorBrush_White_to_AlmostLightGray_FFD1D1D1()
            {
                var result = _c.CreateColorBrush(Color.FromArgb(0xFF, 0xFF, 0xFF, 0xFF));
                result.StartAnimation("Color", ColorAnimation_White_to_AlmostLightGray_FFD1D1D1());
                var controller = result.TryGetAnimationController("Color");
                controller.Pause();
                controller.StartAnimation("Progress", _scalarExpressionAnimation);
                return result;
            }

            // Color
            ColorKeyFrameAnimation ColorAnimation_White_to_AlmostKhaki_FFFFEC64()
            {
                var result = _c.CreateColorKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                // White
                result.InsertKeyFrame(0, Color.FromArgb(0xFF, 0xFF, 0xFF, 0xFF), _stepThenHoldEasingFunction);
                // White
                result.InsertKeyFrame(0.676470578F, Color.FromArgb(0xFF, 0xFF, 0xFF, 0xFF), _linearEasingFunction);
                // AlmostKhaki_FFFFEC64
                result.InsertKeyFrame(0.686274529F, Color.FromArgb(0xFF, 0xFF, 0xEC, 0x64), CubicBezierEasingFunction_3());
                return result;
            }

            // Color
            ColorKeyFrameAnimation ColorAnimation_White_to_AlmostLightGray_FFD1D1D1()
            {
                var result = _c.CreateColorKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                // White
                result.InsertKeyFrame(0, Color.FromArgb(0xFF, 0xFF, 0xFF, 0xFF), _stepThenHoldEasingFunction);
                // White
                result.InsertKeyFrame(0.676470578F, Color.FromArgb(0xFF, 0xFF, 0xFF, 0xFF), _linearEasingFunction);
                // AlmostLightGray_FFD1D1D1
                result.InsertKeyFrame(0.686274529F, Color.FromArgb(0xFF, 0xD1, 0xD1, 0xD1), _cubicBezierEasingFunction_3);
                return result;
            }

            CompositionColorBrush ColorBrush_Black()
            {
                return _colorBrush_Black = _c.CreateColorBrush(Color.FromArgb(0xFF, 0x00, 0x00, 0x00));
            }

            CompositionPath CompositionPath_3()
            {
                var result = _compositionPath_3 = new CompositionPath(Geometry_3());
                return result;
            }

            CompositionPath CompositionPath_4()
            {
                var result = _compositionPath_4 = new CompositionPath(Geometry_4());
                return result;
            }

            CompositionPath CompositionPath_5()
            {
                var result = _compositionPath_5 = new CompositionPath(Geometry_5());
                return result;
            }

            CompositionPath CompositionPath_6()
            {
                var result = _compositionPath_6 = new CompositionPath(Geometry_6());
                return result;
            }

            // Layer (Shape): default fill
            CompositionContainerShape ContainerShape_0()
            {
                var result = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(0, 90);
                result.Offset = new Vector2(140, 140);
                var shapes = result.Shapes;
                shapes.Add(SpriteShape_0());
                result.StartAnimation("Scale", Vector2Animation());
                var controller = result.TryGetAnimationController("Scale");
                controller.Pause();
                controller.StartAnimation("Progress", ScalarExpressionAnimation());
                result.StartAnimation("RotationAngleInDegrees", ScalarAnimation_0_to_0());
                controller = result.TryGetAnimationController("RotationAngleInDegrees");
                controller.Pause();
                controller.StartAnimation("Progress", _scalarExpressionAnimation);
                return result;
            }

            // Layer (Shape): default fill 2
            CompositionContainerShape ContainerShape_1()
            {
                var result = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(0, 90);
                result.Offset = new Vector2(140, 140);
                var shapes = result.Shapes;
                shapes.Add(SpriteShape_1());
                result.StartAnimation("Scale", _vector2Animation);
                var controller = result.TryGetAnimationController("Scale");
                controller.Pause();
                controller.StartAnimation("Progress", _scalarExpressionAnimation);
                result.StartAnimation("RotationAngleInDegrees", _scalarAnimation_0_to_0);
                controller = result.TryGetAnimationController("RotationAngleInDegrees");
                controller.Pause();
                controller.StartAnimation("Progress", _scalarExpressionAnimation);
                return result;
            }

            // Layer (Shape): default fill 3
            CompositionContainerShape ContainerShape_2()
            {
                var result = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(0, 90);
                result.Offset = new Vector2(140, 140);
                var shapes = result.Shapes;
                shapes.Add(SpriteShape_2());
                result.StartAnimation("Scale", _vector2Animation);
                var controller = result.TryGetAnimationController("Scale");
                controller.Pause();
                controller.StartAnimation("Progress", _scalarExpressionAnimation);
                result.StartAnimation("RotationAngleInDegrees", _scalarAnimation_0_to_0);
                controller = result.TryGetAnimationController("RotationAngleInDegrees");
                controller.Pause();
                controller.StartAnimation("Progress", _scalarExpressionAnimation);
                return result;
            }

            // Layer (Shape): Shape Layer 1
            CompositionContainerShape ContainerShape_3()
            {
                var result = _c.CreateContainerShape();
                result.TransformMatrix = new Matrix3x2(0, 0, 0, 0, 0, 0);
                var shapes = result.Shapes;
                shapes.Add(SpriteShape_3());
                result.StartAnimation("TransformMatrix._11", ScalarAnimation_1_to_0());
                var controller = result.TryGetAnimationController("TransformMatrix._11");
                controller.Pause();
                controller.StartAnimation("Progress", _scalarExpressionAnimation);
                _reusableExpressionAnimation.ClearAllParameters();
                _reusableExpressionAnimation.Expression = "my.TransformMatrix._11";
                _reusableExpressionAnimation.SetReferenceParameter("my", result);
                result.StartAnimation("TransformMatrix._22", _reusableExpressionAnimation);
                return result;
            }

            // Layer (Shape): Shape Layer 2
            CompositionContainerShape ContainerShape_4()
            {
                var result = _c.CreateContainerShape();
                result.TransformMatrix = new Matrix3x2(0, 0, 0, 0, 0, 0);
                var shapes = result.Shapes;
                shapes.Add(SpriteShape_4());
                result.StartAnimation("TransformMatrix._11", _scalarAnimation_1_to_0);
                var controller = result.TryGetAnimationController("TransformMatrix._11");
                controller.Pause();
                controller.StartAnimation("Progress", _scalarExpressionAnimation);
                _reusableExpressionAnimation.ClearAllParameters();
                _reusableExpressionAnimation.Expression = "my.TransformMatrix._11";
                _reusableExpressionAnimation.SetReferenceParameter("my", result);
                result.StartAnimation("TransformMatrix._22", _reusableExpressionAnimation);
                return result;
            }

            // Layer (Shape): Shape Layer 3
            CompositionContainerShape ContainerShape_5()
            {
                var result = _c.CreateContainerShape();
                result.TransformMatrix = new Matrix3x2(0, 0, 0, 0, 0, 0);
                var shapes = result.Shapes;
                shapes.Add(SpriteShape_5());
                result.StartAnimation("TransformMatrix._11", _scalarAnimation_1_to_0);
                var controller = result.TryGetAnimationController("TransformMatrix._11");
                controller.Pause();
                controller.StartAnimation("Progress", _scalarExpressionAnimation);
                _reusableExpressionAnimation.ClearAllParameters();
                _reusableExpressionAnimation.Expression = "my.TransformMatrix._11";
                _reusableExpressionAnimation.SetReferenceParameter("my", result);
                result.StartAnimation("TransformMatrix._22", _reusableExpressionAnimation);
                return result;
            }

            // Layer (Shape): Shape Layer 4
            CompositionContainerShape ContainerShape_6()
            {
                var result = _c.CreateContainerShape();
                result.TransformMatrix = new Matrix3x2(0, 0, 0, 0, 0, 0);
                var shapes = result.Shapes;
                shapes.Add(SpriteShape_6());
                result.StartAnimation("TransformMatrix._11", _scalarAnimation_1_to_0);
                var controller = result.TryGetAnimationController("TransformMatrix._11");
                controller.Pause();
                controller.StartAnimation("Progress", _scalarExpressionAnimation);
                _reusableExpressionAnimation.ClearAllParameters();
                _reusableExpressionAnimation.Expression = "my.TransformMatrix._11";
                _reusableExpressionAnimation.SetReferenceParameter("my", result);
                result.StartAnimation("TransformMatrix._22", _reusableExpressionAnimation);
                return result;
            }

            // Layer (Shape): Shape Layer 5
            CompositionContainerShape ContainerShape_7()
            {
                var result = _c.CreateContainerShape();
                result.TransformMatrix = new Matrix3x2(0, 0, 0, 0, 0, 0);
                var shapes = result.Shapes;
                shapes.Add(SpriteShape_7());
                result.StartAnimation("TransformMatrix._11", _scalarAnimation_1_to_0);
                var controller = result.TryGetAnimationController("TransformMatrix._11");
                controller.Pause();
                controller.StartAnimation("Progress", _scalarExpressionAnimation);
                _reusableExpressionAnimation.ClearAllParameters();
                _reusableExpressionAnimation.Expression = "my.TransformMatrix._11";
                _reusableExpressionAnimation.SetReferenceParameter("my", result);
                result.StartAnimation("TransformMatrix._22", _reusableExpressionAnimation);
                return result;
            }

            // Scale
            CubicBezierEasingFunction CubicBezierEasingFunction_0()
            {
                return _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.166999996F), new Vector2(0, 1));
            }

            // Scale
            CubicBezierEasingFunction CubicBezierEasingFunction_1()
            {
                return _c.CreateCubicBezierEasingFunction(new Vector2(1, 0), new Vector2(0.833000004F, 0.833000004F));
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_2()
            {
                return _cubicBezierEasingFunction_2 = _c.CreateCubicBezierEasingFunction(new Vector2(0.649999976F, 0), new Vector2(0.349999994F, 1));
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_3()
            {
                return _cubicBezierEasingFunction_3 = _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.166999996F), new Vector2(0.833000004F, 0.833000004F));
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_4()
            {
                return _cubicBezierEasingFunction_4 = _c.CreateCubicBezierEasingFunction(new Vector2(0.850000024F, 0), new Vector2(0.666999996F, 1));
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_5()
            {
                return _cubicBezierEasingFunction_5 = _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0), new Vector2(0.150000006F, 1));
            }

            CanvasGeometry Geometry_0()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-1.43799996F, -120.887001F));
                    builder.AddCubicBezier(new Vector2(6.13999987F, -120.887001F), new Vector2(13.4449997F, -119.910004F), new Vector2(20.4759998F, -117.957001F));
                    builder.AddCubicBezier(new Vector2(27.507F, -116.003998F), new Vector2(34.0890007F, -113.231003F), new Vector2(40.2220001F, -109.637001F));
                    builder.AddCubicBezier(new Vector2(46.3549995F, -106.042999F), new Vector2(51.9210014F, -101.746002F), new Vector2(56.9210014F, -96.7460022F));
                    builder.AddCubicBezier(new Vector2(61.9210014F, -91.7460022F), new Vector2(66.2180023F, -86.1800003F), new Vector2(69.8119965F, -80.0469971F));
                    builder.AddCubicBezier(new Vector2(73.4059982F, -73.9140015F), new Vector2(76.1790009F, -67.3320007F), new Vector2(78.1320038F, -60.3009987F));
                    builder.AddCubicBezier(new Vector2(80.0849991F, -53.2700005F), new Vector2(81.0619965F, -45.9650002F), new Vector2(81.0619965F, -38.387001F));
                    builder.AddCubicBezier(new Vector2(81.0619965F, -27.059F), new Vector2(78.9140015F, -16.5510006F), new Vector2(74.6169968F, -6.86299992F));
                    builder.AddCubicBezier(new Vector2(70.3199997F, 2.82500005F), new Vector2(64.1869965F, 11.6129999F), new Vector2(56.2179985F, 19.5039997F));
                    builder.AddCubicBezier(new Vector2(49.7340012F, 25.9099998F), new Vector2(44.7540016F, 33.0579987F), new Vector2(41.2770004F, 40.9490013F));
                    builder.AddCubicBezier(new Vector2(37.7999992F, 48.8400002F), new Vector2(36.0620003F, 57.394001F), new Vector2(36.0620003F, 66.612999F));
                    builder.AddLine(new Vector2(36.0620003F, 96.612999F));
                    builder.AddCubicBezier(new Vector2(36.0620003F, 99.737999F), new Vector2(35.4760017F, 102.667999F), new Vector2(34.3040009F, 105.402F));
                    builder.AddCubicBezier(new Vector2(33.132F, 108.136002F), new Vector2(31.5310001F, 110.519997F), new Vector2(29.5F, 112.551003F));
                    builder.AddCubicBezier(new Vector2(27.4689999F, 114.582001F), new Vector2(25.0849991F, 116.182999F), new Vector2(22.3509998F, 117.355003F));
                    builder.AddCubicBezier(new Vector2(19.6170006F, 118.527F), new Vector2(16.6870003F, 119.112999F), new Vector2(13.5620003F, 119.112999F));
                    builder.AddLine(new Vector2(-16.4379997F, 119.112999F));
                    builder.AddCubicBezier(new Vector2(-19.5629997F, 119.112999F), new Vector2(-22.493F, 118.527F), new Vector2(-25.2269993F, 117.355003F));
                    builder.AddCubicBezier(new Vector2(-27.9610004F, 116.182999F), new Vector2(-30.3439999F, 114.582001F), new Vector2(-32.375F, 112.551003F));
                    builder.AddCubicBezier(new Vector2(-34.4059982F, 110.519997F), new Vector2(-36.0079994F, 108.136002F), new Vector2(-37.1800003F, 105.402F));
                    builder.AddCubicBezier(new Vector2(-38.3520012F, 102.667999F), new Vector2(-38.9379997F, 99.737999F), new Vector2(-38.9379997F, 96.612999F));
                    builder.AddLine(new Vector2(-38.9379997F, 66.612999F));
                    builder.AddCubicBezier(new Vector2(-38.9379997F, 57.394001F), new Vector2(-40.6759987F, 48.8400002F), new Vector2(-44.1529999F, 40.9490013F));
                    builder.AddCubicBezier(new Vector2(-47.6300011F, 33.0579987F), new Vector2(-52.6100006F, 25.9099998F), new Vector2(-59.0940018F, 19.5039997F));
                    builder.AddCubicBezier(new Vector2(-67.0630035F, 11.6129999F), new Vector2(-73.1959991F, 2.82500005F), new Vector2(-77.4929962F, -6.86299992F));
                    builder.AddCubicBezier(new Vector2(-81.7900009F, -16.5510006F), new Vector2(-83.9380035F, -27.059F), new Vector2(-83.9380035F, -38.387001F));
                    builder.AddCubicBezier(new Vector2(-83.9380035F, -45.9650002F), new Vector2(-82.9609985F, -53.2700005F), new Vector2(-81.0080032F, -60.3009987F));
                    builder.AddCubicBezier(new Vector2(-79.0550003F, -67.3320007F), new Vector2(-76.2819977F, -73.9140015F), new Vector2(-72.6880035F, -80.0469971F));
                    builder.AddCubicBezier(new Vector2(-69.0940018F, -86.1800003F), new Vector2(-64.7969971F, -91.7460022F), new Vector2(-59.7970009F, -96.7460022F));
                    builder.AddCubicBezier(new Vector2(-54.7970009F, -101.746002F), new Vector2(-49.230999F, -106.042999F), new Vector2(-43.0979996F, -109.637001F));
                    builder.AddCubicBezier(new Vector2(-36.9650002F, -113.231003F), new Vector2(-30.3829994F, -116.003998F), new Vector2(-23.3519993F, -117.957001F));
                    builder.AddCubicBezier(new Vector2(-16.3209991F, -119.910004F), new Vector2(-9.01599979F, -120.887001F), new Vector2(-1.43799996F, -120.887001F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_1()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(21.4139996F, 59.112999F));
                    builder.AddCubicBezier(new Vector2(22.4300003F, 49.0349998F), new Vector2(25.007F, 39.894001F), new Vector2(29.1480007F, 31.691F));
                    builder.AddCubicBezier(new Vector2(33.2890015F, 23.4880009F), new Vector2(38.875F, 15.8319998F), new Vector2(45.9059982F, 8.72299957F));
                    builder.AddCubicBezier(new Vector2(52.3899994F, 2.16000009F), new Vector2(57.3699989F, -5.0079999F), new Vector2(60.8470001F, -12.7810001F));
                    builder.AddCubicBezier(new Vector2(64.3239975F, -20.5540009F), new Vector2(66.0619965F, -29.0900002F), new Vector2(66.0619965F, -38.387001F));
                    builder.AddCubicBezier(new Vector2(66.0619965F, -47.6839981F), new Vector2(64.2850037F, -56.4339981F), new Vector2(60.7299995F, -64.637001F));
                    builder.AddCubicBezier(new Vector2(57.1749992F, -72.8399963F), new Vector2(52.3510017F, -79.987999F), new Vector2(46.257F, -86.0820007F));
                    builder.AddCubicBezier(new Vector2(40.1629982F, -92.1760025F), new Vector2(33.0149994F, -97), new Vector2(24.8120003F, -100.555F));
                    builder.AddCubicBezier(new Vector2(16.6089993F, -104.110001F), new Vector2(7.85900021F, -105.887001F), new Vector2(-1.43799996F, -105.887001F));
                    builder.AddCubicBezier(new Vector2(-10.7349997F, -105.887001F), new Vector2(-19.4850006F, -104.110001F), new Vector2(-27.6879997F, -100.555F));
                    builder.AddCubicBezier(new Vector2(-35.8909988F, -97), new Vector2(-43.0390015F, -92.1760025F), new Vector2(-49.1329994F, -86.0820007F));
                    builder.AddCubicBezier(new Vector2(-55.2270012F, -79.987999F), new Vector2(-60.0509987F, -72.8399963F), new Vector2(-63.605999F, -64.637001F));
                    builder.AddCubicBezier(new Vector2(-67.1610031F, -56.4339981F), new Vector2(-68.9380035F, -47.6839981F), new Vector2(-68.9380035F, -38.387001F));
                    builder.AddCubicBezier(new Vector2(-68.9380035F, -29.0900002F), new Vector2(-67.1999969F, -20.5540009F), new Vector2(-63.7229996F, -12.7810001F));
                    builder.AddCubicBezier(new Vector2(-60.2459984F, -5.0079999F), new Vector2(-55.2659988F, 2.16000009F), new Vector2(-48.7820015F, 8.72299957F));
                    builder.AddCubicBezier(new Vector2(-41.7509995F, 15.8319998F), new Vector2(-36.1650009F, 23.4880009F), new Vector2(-32.0239983F, 31.691F));
                    builder.AddCubicBezier(new Vector2(-27.8829994F, 39.894001F), new Vector2(-25.3059998F, 49.0349998F), new Vector2(-24.2900009F, 59.112999F));
                    builder.AddLine(new Vector2(21.4139996F, 59.112999F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_2()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(13.5620003F, 104.112999F));
                    builder.AddCubicBezier(new Vector2(15.5930004F, 104.112999F), new Vector2(17.3509998F, 103.371002F), new Vector2(18.8349991F, 101.887001F));
                    builder.AddCubicBezier(new Vector2(20.3190002F, 100.403F), new Vector2(21.0620003F, 98.6439972F), new Vector2(21.0620003F, 96.612999F));
                    builder.AddLine(new Vector2(21.0620003F, 74.112999F));
                    builder.AddLine(new Vector2(-23.9379997F, 74.112999F));
                    builder.AddLine(new Vector2(-23.9379997F, 96.612999F));
                    builder.AddCubicBezier(new Vector2(-23.9379997F, 98.6439972F), new Vector2(-23.1949997F, 100.403F), new Vector2(-21.7110004F, 101.887001F));
                    builder.AddCubicBezier(new Vector2(-20.2269993F, 103.371002F), new Vector2(-18.4689999F, 104.112999F), new Vector2(-16.4379997F, 104.112999F));
                    builder.AddLine(new Vector2(13.5620003F, 104.112999F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_3()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(-2, -83.75F));
                    builder.AddLine(new Vector2(-2, -81));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_4()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(-2, -83.75F));
                    builder.AddCubicBezier(new Vector2(-2, -83.75F), new Vector2(-2, -81), new Vector2(-2, -81));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_5()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(-2, -131.25F));
                    builder.AddCubicBezier(new Vector2(-2, -131.25F), new Vector2(-2, -81), new Vector2(-2, -81));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_6()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(-2, -131.25F));
                    builder.AddCubicBezier(new Vector2(-2, -131.25F), new Vector2(-2, -131.25F), new Vector2(-2, -131.25F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            StepEasingFunction HoldThenStepEasingFunction()
            {
                var result = _holdThenStepEasingFunction = _c.CreateStepEasingFunction();
                result.IsFinalStepSingleFrame  = true;
                return result;
            }

            LinearEasingFunction LinearEasingFunction()
            {
                return _linearEasingFunction = _c.CreateLinearEasingFunction();
            }

            // Layer (Shape): default fill
            //   Path 1
            // Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_0()
            {
                var result = _c.CreatePathGeometry(new CompositionPath(Geometry_0()));
                return result;
            }

            // Layer (Shape): default fill 2
            //   Path 1
            // Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_1()
            {
                var result = _c.CreatePathGeometry(new CompositionPath(Geometry_1()));
                return result;
            }

            // Layer (Shape): default fill 3
            //   Path 1
            // Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_2()
            {
                var result = _c.CreatePathGeometry(new CompositionPath(Geometry_2()));
                return result;
            }

            // Layer (Shape): Shape Layer 1
            //   Path 1
            // Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_3()
            {
                var result = _c.CreatePathGeometry(CompositionPath_3());
                result.StartAnimation("Path", PathKeyFrameAnimation_0());
                var controller = result.TryGetAnimationController("Path");
                controller.Pause();
                controller.StartAnimation("Progress", _scalarExpressionAnimation);
                return result;
            }

            // Layer (Shape): Shape Layer 2
            //   Path 1
            // Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_4()
            {
                var result = _c.CreatePathGeometry(_compositionPath_3);
                result.StartAnimation("Path", PathKeyFrameAnimation_1());
                var controller = result.TryGetAnimationController("Path");
                controller.Pause();
                controller.StartAnimation("Progress", _scalarExpressionAnimation);
                return result;
            }

            // Layer (Shape): Shape Layer 3
            //   Path 1
            // Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_5()
            {
                var result = _c.CreatePathGeometry(_compositionPath_3);
                result.StartAnimation("Path", PathKeyFrameAnimation_2());
                var controller = result.TryGetAnimationController("Path");
                controller.Pause();
                controller.StartAnimation("Progress", _scalarExpressionAnimation);
                return result;
            }

            // Layer (Shape): Shape Layer 4
            //   Path 1
            // Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_6()
            {
                var result = _c.CreatePathGeometry(_compositionPath_3);
                result.StartAnimation("Path", PathKeyFrameAnimation_3());
                var controller = result.TryGetAnimationController("Path");
                controller.Pause();
                controller.StartAnimation("Progress", _scalarExpressionAnimation);
                return result;
            }

            // Layer (Shape): Shape Layer 5
            //   Path 1
            // Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_7()
            {
                var result = _c.CreatePathGeometry(_compositionPath_3);
                result.StartAnimation("Path", PathKeyFrameAnimation_4());
                var controller = result.TryGetAnimationController("Path");
                controller.Pause();
                controller.StartAnimation("Progress", _scalarExpressionAnimation);
                return result;
            }

            // Layer (Shape): Shape Layer 1
            //   Path 1
            //     Path 1.PathGeometry
            // Path
            PathKeyFrameAnimation PathKeyFrameAnimation_0()
            {
                var result = _c.CreatePathKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(0, CompositionPath_4(), _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.627451003F, _compositionPath_4, _linearEasingFunction);
                result.InsertKeyFrame(0.725490212F, CompositionPath_5(), CubicBezierEasingFunction_4());
                result.InsertKeyFrame(0.823529422F, CompositionPath_6(), CubicBezierEasingFunction_5());
                return result;
            }

            // Layer (Shape): Shape Layer 2
            //   Path 1
            //     Path 1.PathGeometry
            // Path
            PathKeyFrameAnimation PathKeyFrameAnimation_1()
            {
                var result = _c.CreatePathKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(0, _compositionPath_4, _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.627451003F, _compositionPath_4, _linearEasingFunction);
                result.InsertKeyFrame(0.725490212F, _compositionPath_5, _cubicBezierEasingFunction_4);
                result.InsertKeyFrame(0.823529422F, _compositionPath_6, _cubicBezierEasingFunction_5);
                return result;
            }

            // Layer (Shape): Shape Layer 3
            //   Path 1
            //     Path 1.PathGeometry
            // Path
            PathKeyFrameAnimation PathKeyFrameAnimation_2()
            {
                var result = _c.CreatePathKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(0, _compositionPath_4, _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.627451003F, _compositionPath_4, _linearEasingFunction);
                result.InsertKeyFrame(0.725490212F, _compositionPath_5, _cubicBezierEasingFunction_4);
                result.InsertKeyFrame(0.823529422F, _compositionPath_6, _cubicBezierEasingFunction_5);
                return result;
            }

            // Layer (Shape): Shape Layer 4
            //   Path 1
            //     Path 1.PathGeometry
            // Path
            PathKeyFrameAnimation PathKeyFrameAnimation_3()
            {
                var result = _c.CreatePathKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(0, _compositionPath_4, _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.627451003F, _compositionPath_4, _linearEasingFunction);
                result.InsertKeyFrame(0.725490212F, _compositionPath_5, _cubicBezierEasingFunction_4);
                result.InsertKeyFrame(0.823529422F, _compositionPath_6, _cubicBezierEasingFunction_5);
                return result;
            }

            // Layer (Shape): Shape Layer 5
            //   Path 1
            //     Path 1.PathGeometry
            // Path
            PathKeyFrameAnimation PathKeyFrameAnimation_4()
            {
                var result = _c.CreatePathKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(0, _compositionPath_4, _stepThenHoldEasingFunction);
                result.InsertKeyFrame(0.627451003F, _compositionPath_4, _linearEasingFunction);
                result.InsertKeyFrame(0.725490212F, _compositionPath_5, _cubicBezierEasingFunction_4);
                result.InsertKeyFrame(0.823529422F, _compositionPath_6, _cubicBezierEasingFunction_5);
                return result;
            }

            // The root of the composition.
            ContainerVisual Root()
            {
                var result = _root = _c.CreateContainerVisual();
                var propertySet = result.Properties;
                propertySet.InsertScalar("Progress", 0);
                var children = result.Children;
                children.InsertAtTop(ShapeVisual());
                return result;
            }

            // RotationAngleInDegrees
            ScalarKeyFrameAnimation ScalarAnimation_0_to_0()
            {
                var result = _scalarAnimation_0_to_0 = _c.CreateScalarKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(0, 0, LinearEasingFunction());
                result.InsertKeyFrame(0.0588235296F, -15, CubicBezierEasingFunction_2());
                result.InsertKeyFrame(0.117647059F, 15, _cubicBezierEasingFunction_2);
                result.InsertKeyFrame(0.176470593F, -15, _cubicBezierEasingFunction_2);
                result.InsertKeyFrame(0.235294119F, 0, _cubicBezierEasingFunction_2);
                return result;
            }

            ScalarKeyFrameAnimation ScalarAnimation_1_to_0()
            {
                var result = _scalarAnimation_1_to_0 = _c.CreateScalarKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(0.627451003F, 1, _holdThenStepEasingFunction);
                result.InsertKeyFrame(0.843137264F, 0, _holdThenStepEasingFunction);
                return result;
            }

            ExpressionAnimation ScalarExpressionAnimation()
            {
                var result = _scalarExpressionAnimation = _c.CreateExpressionAnimation();
                result.SetReferenceParameter("_", _root);
                result.Expression = "_.Progress";
                return result;
            }

            ShapeVisual ShapeVisual()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(280, 280);
                var shapes = result.Shapes;
                // Layer (Shape): default fill
                shapes.Add(ContainerShape_0());
                // Layer (Shape): default fill 2
                shapes.Add(ContainerShape_1());
                // Layer (Shape): default fill 3
                shapes.Add(ContainerShape_2());
                // Layer (Shape): Shape Layer 1
                shapes.Add(ContainerShape_3());
                // Layer (Shape): Shape Layer 2
                shapes.Add(ContainerShape_4());
                // Layer (Shape): Shape Layer 3
                shapes.Add(ContainerShape_5());
                // Layer (Shape): Shape Layer 4
                shapes.Add(ContainerShape_6());
                // Layer (Shape): Shape Layer 5
                shapes.Add(ContainerShape_7());
                return result;
            }

            // Layer (Shape): default fill
            // Path 1
            CompositionSpriteShape SpriteShape_0()
            {
                var result = _c.CreateSpriteShape();
                result.FillBrush = ColorBrush_Black();
                result.Geometry = PathGeometry_0();
                return result;
            }

            // Layer (Shape): default fill 2
            // Path 1
            CompositionSpriteShape SpriteShape_1()
            {
                var result = _c.CreateSpriteShape();
                result.FillBrush = AnimatedColorBrush_White_to_AlmostKhaki_FFFFEC64();
                result.Geometry = PathGeometry_1();
                return result;
            }

            // Layer (Shape): default fill 3
            // Path 1
            CompositionSpriteShape SpriteShape_2()
            {
                var result = _c.CreateSpriteShape();
                result.FillBrush = AnimatedColorBrush_White_to_AlmostLightGray_FFD1D1D1();
                result.Geometry = PathGeometry_2();
                return result;
            }

            // Layer (Shape): Shape Layer 1
            // Path 1
            CompositionSpriteShape SpriteShape_3()
            {
                var result = _c.CreateSpriteShape();
                result.TransformMatrix = new Matrix3x2(1, 0, 0, 1, 140, 140);
                result.Geometry = PathGeometry_3();
                result.StrokeBrush = _colorBrush_Black;
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeMiterLimit = 4;
                result.StrokeThickness = 10;
                return result;
            }

            // Layer (Shape): Shape Layer 2
            // Path 1
            CompositionSpriteShape SpriteShape_4()
            {
                var result = _c.CreateSpriteShape();
                result.TransformMatrix = new Matrix3x2(0.707106769F, 0.707106769F, -0.707106769F, 0.707106769F, 140, 140);
                result.Geometry = PathGeometry_4();
                result.StrokeBrush = _colorBrush_Black;
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeMiterLimit = 4;
                result.StrokeThickness = 10;
                return result;
            }

            // Layer (Shape): Shape Layer 3
            // Path 1
            CompositionSpriteShape SpriteShape_5()
            {
                var result = _c.CreateSpriteShape();
                result.TransformMatrix = new Matrix3x2(0.707106769F, -0.707106769F, 0.707106769F, 0.707106769F, 140, 140);
                result.Geometry = PathGeometry_5();
                result.StrokeBrush = _colorBrush_Black;
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeMiterLimit = 4;
                result.StrokeThickness = 10;
                return result;
            }

            // Layer (Shape): Shape Layer 4
            // Path 1
            CompositionSpriteShape SpriteShape_6()
            {
                var result = _c.CreateSpriteShape();
                result.TransformMatrix = new Matrix3x2(0.087155804F, 0.99619472F, -0.99619472F, 0.087155804F, 140, 140);
                result.Geometry = PathGeometry_6();
                result.StrokeBrush = _colorBrush_Black;
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeMiterLimit = 4;
                result.StrokeThickness = 10;
                return result;
            }

            // Layer (Shape): Shape Layer 5
            // Path 1
            CompositionSpriteShape SpriteShape_7()
            {
                var result = _c.CreateSpriteShape();
                result.TransformMatrix = new Matrix3x2(0.087155804F, -0.99619472F, 0.99619472F, 0.087155804F, 140, 140);
                result.Geometry = PathGeometry_7();
                result.StrokeBrush = _colorBrush_Black;
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeMiterLimit = 4;
                result.StrokeThickness = 10;
                return result;
            }

            StepEasingFunction StepThenHoldEasingFunction()
            {
                var result = _stepThenHoldEasingFunction = _c.CreateStepEasingFunction();
                result.IsInitialStepSingleFrame  = true;
                return result;
            }

            // Scale
            Vector2KeyFrameAnimation Vector2Animation()
            {
                var result = _vector2Animation = _c.CreateVector2KeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(0, new Vector2(1, 1), StepThenHoldEasingFunction());
                result.InsertKeyFrame(0.588235319F, new Vector2(1, 1), HoldThenStepEasingFunction());
                result.InsertKeyFrame(0.686274529F, new Vector2(0.600000024F, 0.600000024F), CubicBezierEasingFunction_0());
                result.InsertKeyFrame(0.882352948F, new Vector2(1, 1), CubicBezierEasingFunction_1());
                return result;
            }

            internal AnimatedVisual(Compositor compositor)
            {
                _c = compositor;
                _reusableExpressionAnimation = compositor.CreateExpressionAnimation();
                Root();
            }

            Visual IAnimatedVisual.RootVisual => _root;
            TimeSpan IAnimatedVisual.Duration => TimeSpan.FromTicks(c_durationTicks);
            Vector2 IAnimatedVisual.Size => new Vector2(280, 280);
            void IDisposable.Dispose() => _root?.Dispose();
        }
    }
}
