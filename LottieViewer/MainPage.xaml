<Page x:Class="LottieViewer.MainPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:local="using:LottieViewer"
      xmlns:lottie="using:Microsoft.Toolkit.Uwp.UI.Lottie"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:viewmodel="using:LottieViewer.ViewModel"
      Visibility="Visible"
      mc:Ignorable="d">
    <Page.Resources>
        <local:VisiblityConverter x:Key="VisibilityConverter" />
        <local:FloatFormatter x:Key="floatFormatter" />
        <SolidColorBrush x:Name="ArtboardBrush"
                         Color="{x:Bind BackgroundColor.Color, Mode=OneWay}" />
    </Page.Resources>

    <RelativePanel AllowDrop="True"
                   Background="{StaticResource StageBackgroundBrush}"
                   DragEnter="LottieDragEnterHandler"
                   DragLeave="LottieDragLeaveHandler"
                   Drop="LottieDropHandler">
        <Grid x:Name="TopControls"
              Height="60"
              Background="{StaticResource BackgroundBrush}"
              RelativePanel.AlignLeftWithPanel="True"
              RelativePanel.AlignRightWithPanel="True"
              RelativePanel.AlignTopWithPanel="True">
            <StackPanel HorizontalAlignment="Left"
                        Orientation="Horizontal">
                <!--  Open file (alternative: 0xe8e5)  -->
                <ToggleButton Click="PickFile_Click"
                        x:Name="PickFile"
                        AutomationProperties.Name="Pick a Lottie file"
                        Style="{StaticResource ControlsToggleButtonStyle}"
                        ToolTipService.ToolTip="Pick a Lottie file">
                    &#xf12b;
                </ToggleButton>
            </StackPanel>

            <StackPanel HorizontalAlignment="Right"
                        Orientation="Horizontal">
                <!--  Paint palette  -->
                <ToggleButton 
                    Checked="ControlPanelButtonChecked"
                    Unchecked="ControlPanelButtonUnchecked"
                    x:Name="PaletteButton"
                    AutomationProperties.Name="Pick colors"
                    ToolTipService.ToolTip="Color palette"          
                    Style="{StaticResource ControlsToggleButtonStyle}">
                    &#xe790;
                </ToggleButton>
                <!--  Info  -->
                <ToggleButton 
                    x:Name="InfoButton"
                    Checked="ControlPanelButtonChecked"
                    Unchecked="ControlPanelButtonUnchecked"
                    AutomationProperties.Name="View Lottie file info"
                    ToolTipService.ToolTip="Lottie file info"
                    Style="{StaticResource ControlsToggleButtonStyle}">
                    <Grid>
                        <!-- Switch icon based on whether or not the Lottie file has any issues. -->
                        <TextBlock Text="&#xE946;" Visibility="{x:Bind _stage.DiagnosticsViewModel.HasIssues, Converter={StaticResource VisibilityConverter}, ConverterParameter=not, Mode=OneWay}"/>
                        <!-- Different color if there are issues. -->
                        <TextBlock Text="&#xE946;" Visibility="{x:Bind _stage.DiagnosticsViewModel.HasIssues, Converter={StaticResource VisibilityConverter}, Mode=OneWay}" Foreground="Orange"/>
                    </Grid>
                </ToggleButton>
            </StackPanel>
        </Grid>

        <Grid Background="{StaticResource StageBackgroundBrush}"
                RelativePanel.Above="Controls"
                RelativePanel.AlignRightWithPanel="True"
                RelativePanel.Below="TopControls"
                RelativePanel.RightOf="PlayerControls">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.Resources>
                <x:Double x:Key="ControlPanelWidth">355</x:Double>
            </Grid.Resources>
            <!--  The stage. This is where the Lotties are displayed.  -->
            <local:Stage x:Name="_stage" ArtboardColor="{x:Bind ArtboardBrush.Color, Mode=OneWay}" />

            <!-- Control panel. This shows to the right of the stage. Only one panel is allowed to be
                 open at a time. This is ensured through code behind. -->
            <Grid x:Name="ControlPanel"  Grid.Column="1" Background="{StaticResource DropTargetBrush}">
                <Grid.ChildrenTransitions>
                    <TransitionCollection>
                        <PaneThemeTransition Edge="Right"/>
                    </TransitionCollection>
                </Grid.ChildrenTransitions>
                <Grid.Resources>
                    <Style TargetType="TextBlock">
                        <Setter Property="Foreground" Value="White" />
                    </Style>
                </Grid.Resources>

                <!-- Color palette panel -->
                <ScrollViewer 
                    x:Name="ColorPanel"
                    Width="{StaticResource ControlPanelWidth}">

                    <local:PaletteColorPicker 
                        Height="{x:Bind ColorPanel.ViewportHeight, Mode=OneWay}"
                        MinHeight="500"
                        x:Name="_paletteColorPicker" 
                        Grid.Column="1"
                        DiagnosticsViewModel="{x:Bind _stage.DiagnosticsViewModel}"/>
                </ScrollViewer>

                <!-- Info panel -->
                <ScrollViewer
                    x:Name="InfoPanel"
                    Width="{StaticResource ControlPanelWidth}">

                    <StackPanel Padding="20,10,20,0">
                        <!-- Issues. Collapsed if there are no issues. -->
                        <StackPanel Visibility="{x:Bind _stage.DiagnosticsViewModel.HasIssues, Converter={StaticResource VisibilityConverter}, Mode=OneWay}">
                            <TextBlock Visibility="{x:Bind _stage.DiagnosticsViewModel.HasIssues, Converter={StaticResource VisibilityConverter}, Mode=OneWay}"
                                   FontWeight="Bold" Foreground="White" >
                                        This Lottie has some issues ...
                            </TextBlock>
                            <ItemsControl Margin="0, 12, 12,12"
                                      ItemsSource="{x:Bind _stage.DiagnosticsViewModel.Issues, Mode=OneWay}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate x:DataType="lottie:Issue">
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock MinWidth="60">
                                                        <Hyperlink NavigateUri="{x:Bind Url}"><Run FontWeight="Bold"
                                                                 Text="{x:Bind Code}" Foreground="Orange" /></Hyperlink>
                                            </TextBlock>
                                            <TextBlock Text="{x:Bind Description}" TextWrapping="Wrap" MaxWidth="240" Foreground="White"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </StackPanel>
                        <!-- Separator -->
                        <Border Style="{StaticResource SeparatorStyle}" Visibility="{x:Bind _stage.DiagnosticsViewModel.HasIssues, Converter={StaticResource VisibilityConverter}, Mode=OneWay}"/>

                        <!-- Play speed controller. -->
                        <StackPanel>
                            <TextBlock FontWeight="Bold" >Play speed</TextBlock>
                            <Grid Margin="20,14,20,20">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="50"/>
                                </Grid.ColumnDefinitions>
                                <Slider 
                                Padding="10, 0, 10, 0"
                                HorizontalAlignment="Stretch"
                                LargeChange="1"
                                Maximum="2.0"
                                Minimum="-2.0"
                                SmallChange="0.1"
                                StepFrequency="0.1"
                                TickFrequency="0.5"
                                TickPlacement="TopLeft"
                                Value="{x:Bind _stage.Player.PlaybackRate, Mode=TwoWay}" />
                                <TextBlock Grid.Column="1" Margin="10,0,0,0">x <Run Text="{x:Bind _stage.Player.PlaybackRate, Mode=OneWay, Converter={StaticResource floatFormatter}}"/></TextBlock>
                            </Grid>
                        </StackPanel>

                        <!-- Separator -->
                        <Border Style="{StaticResource SeparatorStyle}"/>

                        <!-- Properties list. Only visible if there is a Diagnostics object. -->
                        <Grid Visibility="{x:Bind _stage.DiagnosticsViewModel.DiagnosticsObject, Converter={StaticResource VisibilityConverter}, ConverterParameter=whatthe, Mode=OneWay}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="26"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Grid.Resources>
                                <DataTemplate x:Key="NormalTemplate" x:DataType="viewmodel:PairOfStrings">
                                    <StackPanel Orientation="Horizontal" Margin="0,0,0,2">
                                        <TextBlock Foreground="LightGray" MinWidth="60" Text="{x:Bind Item1}"/>
                                        <TextBlock Foreground="White" Text="{x:Bind Item2}" TextWrapping="Wrap" MaxWidth="250" />
                                    </StackPanel>
                                </DataTemplate>

                                <DataTemplate x:Key="MarkerTemplate" x:DataType="viewmodel:Marker">
                                    <StackPanel Orientation="Horizontal" Margin="0,0,0,2">
                                        <TextBlock Foreground="LightGray" MinWidth="60" Text="{x:Bind PropertyName}"/>
                                        <TextBlock Foreground="White" TextWrapping="Wrap" MaxWidth="250">
                                        <Hyperlink Click="MarkerClick"><Run Text="{x:Bind ProgressText}"/></Hyperlink> <Run Text="{x:Bind Name}"/>
                                        </TextBlock>
                                    </StackPanel>
                                </DataTemplate>

                                <DataTemplate x:Key="MarkerWithDurationTemplate" x:DataType="viewmodel:MarkerWithDuration">
                                    <StackPanel Orientation="Horizontal" Margin="0,0,0,2">
                                        <TextBlock Foreground="LightGray" MinWidth="60" Text="{x:Bind PropertyName}"/>
                                        <TextBlock Foreground="White" TextWrapping="Wrap" MaxWidth="250">
                                        <Hyperlink Click="MarkerClick"><Run Text="{x:Bind ProgressText}"/></Hyperlink> -
                                        <Hyperlink Click="MarkerEndClick"><Run Text="{x:Bind ToProgressText}"/></Hyperlink> <Run Text="{x:Bind Name}"/>
                                        </TextBlock>
                                    </StackPanel>
                                </DataTemplate>

                                <local:PropertiesTemplateSelector 
                                    x:Key="PropertiesTemplateSelector"
                                    Normal="{StaticResource NormalTemplate}"
                                    Marker="{StaticResource MarkerTemplate}"
                                    MarkerWithDuration="{StaticResource MarkerWithDurationTemplate}"/>
                            </Grid.Resources>
                            <TextBlock FontWeight="Bold" >Lottie properties</TextBlock>
                            <ItemsControl x:Name="InfoList" Grid.Row="1" ItemsSource="{x:Bind PropertiesList}" ItemTemplateSelector="{StaticResource PropertiesTemplateSelector}"/>
                        </Grid>

                        <!-- Separator -->
                        <Border Style="{StaticResource SeparatorStyle}"
                            Visibility="{x:Bind _stage.DiagnosticsViewModel.DiagnosticsObject, Converter={StaticResource VisibilityConverter}, ConverterParameter=whatthe, Mode=OneWay}"/>

                        <!-- App version -->
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="26"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <TextBlock FontWeight="Bold" >Lottie Viewer app</TextBlock>
                            <StackPanel Grid.Row="1" Orientation="Horizontal" Margin="0,0,0,2">
                                <TextBlock Foreground="LightGray" MinWidth="60" Text="Version"/>
                                <TextBlock Foreground="White" Text="{x:Bind AppVersion}" MaxWidth="250" />
                            </StackPanel>

                        </Grid>
                    </StackPanel>
                </ScrollViewer>

            </Grid>
        </Grid>

        <StackPanel x:Name="PlayerControls"
                    Width="340"
                    Padding="5"
                    VerticalAlignment="Bottom"
                    Background="{StaticResource ToolsBackgroundBrush}"
                    RelativePanel.Above="Controls"
                    RelativePanel.AlignLeftWithPanel="True"
                    RelativePanel.AlignTopWithPanel="True"
                    Visibility="Collapsed">
            <StackPanel.Resources>
                <Style TargetType="Button">
                    <Setter Property="HorizontalAlignment" Value="Stretch" />
                    <Setter Property="BorderBrush" Value="Black" />
                    <Setter Property="Background" Value="LightGray" />
                </Style>
                <Style TargetType="ToggleSwitch">
                    <Setter Property="HorizontalAlignment" Value="Stretch" />
                    <Setter Property="BorderBrush" Value="Black" />
                    <Setter Property="Background" Value="LightGray" />
                </Style>
                <Style TargetType="ToggleButton">
                    <Setter Property="HorizontalAlignment" Value="Stretch" />
                    <Setter Property="BorderBrush" Value="Black" />
                    <Setter Property="Background" Value="LightGray" />
                </Style>
                <Style TargetType="Slider">
                    <Setter Property="HorizontalAlignment" Value="Stretch" />
                    <Setter Property="BorderBrush" Value="Black" />
                    <Setter Property="Background" Value="LightGray" />
                </Style>
            </StackPanel.Resources>

        </StackPanel>


        <!--  Controls at the bottom of the window  -->
        <Grid x:Name="Controls"
              Height="64"
              Background="{Binding Source={StaticResource BackgroundBrush}}"
              RelativePanel.AlignBottomWithPanel="True"
              RelativePanel.AlignLeftWithPanel="True"
              RelativePanel.AlignRightWithPanel="True">
            <Grid.ColumnDefinitions>
                <!--  Buttons for opening a file, selecting background .  -->
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="3*"
                                  MinWidth="200" />
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <!-- Filler so that when a tool (e.g. color picker) is showing, the play controls move to the left. -->
            <Grid Grid.Column="3" Width="360" Visibility="{x:Bind IsControlPanelVisible, Converter={StaticResource VisibilityConverter}, Mode=OneWay}"/>

            <RelativePanel Grid.Column="1">

                <!--  Play/stop button  -->
                <ToggleButton x:Name="_playStopButton"
                              VerticalAlignment="Center"
                              Checked="_playControl_Toggled"
                              IsEnabled="{x:Bind _stage.Player.IsAnimatedVisualLoaded, Mode=OneWay}"
                              RelativePanel.AlignBottomWithPanel="True"
                              RelativePanel.AlignLeftWithPanel="True"
                              RelativePanel.AlignTopWithPanel="True"
                              Style="{StaticResource ControlsToggleButtonPlainStyle}"
                              ToolTipService.ToolTip="Play/Stop"
                              AutomationProperties.Name="Toggle play/stop"
                              Unchecked="_playControl_Toggled">
                    <Grid>
                        <!-- Those TextBlocks are just for visual purposes, but are confusinng for accessibility,
                             so we remove them from UIA -->

                        <!--  Play  -->
                        <TextBlock Visibility="{x:Bind _playStopButton.IsChecked, Converter={StaticResource VisibilityConverter}, ConverterParameter=not, Mode=OneWay}"
                                   AutomationProperties.AccessibilityView="Raw">&#xedb5;</TextBlock>
                        <!--  Stop  -->
                        <TextBlock Visibility="{x:Bind _playStopButton.IsChecked, Converter={StaticResource VisibilityConverter}, Mode=OneWay}"
                                   AutomationProperties.AccessibilityView="Raw">&#xe71a;</TextBlock>
                    </Grid>
                </ToggleButton>

                <!--  Scrubber  -->
                <!--  IsEnabled="{x:Bind _playStopButton.IsChecked, Mode=OneWay}"  -->
                <local:Scrubber x:Name="_scrubber"
                                AutomationProperties.Name="Animation progress"
                                Margin="0,5,0,0"
                                VerticalAlignment="Center"
                                IsEnabled="{x:Bind _stage.Player.IsAnimatedVisualLoaded, Mode=OneWay}"
                                RelativePanel.AlignBottomWithPanel="True"
                                RelativePanel.AlignRightWithPanel="True"
                                RelativePanel.AlignTopWithPanel="True"
                                RelativePanel.RightOf="_playStopButton"
                                ValueChanged="ProgressSliderChanged"
                                DiagnosticsViewModel="{x:Bind _stage.DiagnosticsViewModel, Mode=OneWay}" />
            </RelativePanel>
        </Grid>
    </RelativePanel>
</Page>
